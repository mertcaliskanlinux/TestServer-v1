version: '3'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432 

    restart: always

    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    networks:
      - nginx_network
        
  djangoapp:
    build: .
    volumes:
      - .:/opt/services/djangoapp/src
      - static_volume:/opt/services/djangoapp/static
      - media_volume:/opt/services/djangoapp/media
    depends_on:
      - prometheus
    networks:
      - nginx_network

  nginx:
    image: pagespeed/nginx-pagespeed:latest
    ports:
      - 80:80
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/opt/services/djangoapp/static
      - media_volume:/opt/services/djangoapp/media
    restart: always
    depends_on:
      - djangoapp
    networks:
      - nginx_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      
    restart: always

    ports:
      - "9090:9090"
    networks:
      - nginx_network

  grafana:

    image: grafana/grafana-enterprise
    
    container_name: grafana

    restart: unless-stopped
    ports:
     - '3000:3000'
    networks:
      - nginx_network
    volumes:
      - grafana_data:/var/lib/grafana

networks:
  nginx_network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  postgres_data:  # Declare the postgres_data volume
  grafana_data: {}
